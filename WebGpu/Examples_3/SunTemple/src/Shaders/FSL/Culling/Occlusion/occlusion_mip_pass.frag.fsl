/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

RES(Tex2D(float), srcTex, UPDATE_FREQ_NONE, t0, binding = 1);
RES(SamplerState,  uSampler0, UPDATE_FREQ_NONE, s0, binding = 2);

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, UV, TEXCOORD1);
};

float PS_MAIN(VSOutput In)
{
	INIT_MAIN;

	float2 invDim = f2(1.0f) / float2(GetDimensions(Get(srcTex), Get(uSampler0)));
	
	float depth = -1.0f;
	UNROLL 
	for (int x = 0; x < 2; ++x)
	{
		UNROLL 
		for (int y = 0; y < 2; ++y)
			depth = max(depth, SampleTex2D(Get(srcTex), Get(uSampler0), In.UV + float2(x * invDim.x, y * invDim.y)).x);
	}
	RETURN(depth);
}
